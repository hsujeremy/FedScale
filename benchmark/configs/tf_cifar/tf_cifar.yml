# Configuration file of running tensorflow backend

# ========== Cluster configuration ==========
# ip address of the parameter server (need 1 GPU process)
ps_ip: localhost

# ip address of each worker:# of available gpus process on each gpu in this node
# Note that if we collocate ps and worker on same GPU, then we need to decrease this number of available processes on that GPU by 1
# E.g., master node has 4 available processes, then 1 for the ps, and worker should be set to: worker:3
worker_ips:
    - localhost:[4] # worker_ip: [(# processes on gpu) for gpu in available_gpus] eg. 10.0.0.2:[4,4,4,4] This node has 4 gpus, each gpu has 4 processes.

exp_path: /n/home10/steveli/FedScale/fedscale/cloud

# Entry function of executor and aggregator under $exp_path
executor_entry: execution/executor.py

aggregator_entry: aggregation/aggregator.py

auth:
    ssh_user: ""
    ssh_private_key: ~/.ssh/id_rsa

# cmd to run before we can indeed run FAR (in order)
setup_commands:
    - source $HOME/anaconda3/bin/activate fedscale

# ========== Additional job configuration ==========
# Default parameters are specified in config_parser.py, wherein more description of the parameter can be found

job_conf:
    - job_name: cifar10_fedscale              # Generate logs under this folder: log_path/job_name/time_stamp
    - log_path: /n/home10/steveli/FedScale/benchmark # Path of log files
    - num_participants: 40                # Number of participants per round, we use K=100 in our paper, large K will be much slower
    - data_set: cifar10                  # Dataset: openImg, google_speech, stackoverflow
    - data_dir: /n/home10/steveli/FedScale/benchmark/dataset/data/    # Path of the dataset
    - model: resnet50                    # Need to define the model in tf_aggregator.py
    - device_conf_file: /n/home10/steveli/FedScale/benchmark/dataset/data/device_info/client_device_capacity     # Path of the client trace
    - device_avail_file: /n/home10/steveli/FedScale/benchmark/dataset/data/device_info/client_behave_trace
    # - model_zoo: fedscale-torch-zoo
    - eval_interval: 10                # How many rounds to run a testing on the testing set
    - rounds: 200                        # Number of rounds to run this training. We use 1000 in our paper, while it may converge w/ ~400 rounds
    - filter_less: 0                     # Remove clients w/ less than 21 samples
    - num_loaders: 2
    - local_steps: 20
    - learning_rate: 0.001
    - input_shape: 32 32 3
    - batch_size: 32
    - num_classes: 10
    - test_bsz: 32
    - use_cuda: True
    - engine: 'pytorch'
